[
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "利用AI大模型，一键生成高清短视频 Generate short videos with one click using AI LLM.",
    "language": "Python",
    "star": "435"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "A text-to-speech (TTS), speech-to-text (STT) and speech-to-speech (STS) library built on Apple's MLX framework, providing efficient speech analysis on Apple Silicon.",
    "language": "Python",
    "star": "174"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "",
    "language": "TypeScript",
    "star": "1"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "Code at the speed of thought – Zed is a high-performance, multiplayer code editor from the creators of Atom and Tree-sitter.",
    "language": "Rust",
    "star": "256"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "D-FINE: Redefine Regression Task of DETRs as Fine-grained Distribution Refinement [ICLR 2025 Spotlight]",
    "language": "Python",
    "star": "23"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "Broadcast TV simulator",
    "language": "Python",
    "star": "41"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "Frame profiler",
    "language": "C++",
    "star": "35"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "Official repository for LTX-Video",
    "language": "Python",
    "star": "263"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "A collection of MCP servers.",
    "language": "none",
    "star": "193"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "UI components for building fantastic desktop application by using GPUI.",
    "language": "Rust",
    "star": "503"
  },
  {
    "title": "",
    "url": "https://github.comundefined",
    "description": "Learn Agentic AI using Dapr Agentic Cloud Ascent (DACA) Design Pattern and Agent-Native Cloud Technologies: OpenAI Agents SDK, Memory, MCP, A2A, Knowledge Graphs, Dapr, Rancher Desktop, and Kubernetes.",
    "language": "Jupyter Notebook",
    "star": "13"
  }
]